#include <stdio.h>
#include <ctype.h>
#include <string.h>

int isKeyword(char buffer[]);
int isOperator(char ch);
int isDelimiter(char ch);

int main() {
    char c, buffer[15];
    FILE *fp;
    int i = 0;

    fp = fopen("input.txt", "r");

    if (fp == NULL) {
        printf("Error while opening the file\n");
        return 0;
    }

    while ((c = fgetc(fp)) != EOF) {
        if (c == ' ' || c == '\t' || c == '\n')
            continue;

        if (c == '/') {
            if ((c = fgetc(fp)) == '/') {
                while ((c = fgetc(fp)) != '\n')
                    continue;
            } else {
                printf("/ is an operator\n");
                fseek(fp, -1, SEEK_CUR);
            }
        }

        if (isOperator(c) || isDelimiter(c)) {
            printf("%c is an operator or delimiter\n", c);
        }

        else if (isalpha(c)) {
            buffer[i++] = c;
            while (isalnum(c = fgetc(fp)))
                buffer[i++] = c;
            buffer[i] = '\0';
            i = 0;

            if (isKeyword(buffer))
                printf("%s is a keyword\n", buffer);
            else
                printf("%s is an identifier\n", buffer);

            fseek(fp, -1, SEEK_CUR);
        }

        else if (isdigit(c)) {
            printf("%c is a constant\n", c);
        }
    }

    fclose(fp);

    return 0;
}

int isKeyword(char buffer[]) {
    char keywords[32][10] = {
        "auto", "break", "case", "char", "const", "continue", "default",
        "do", "double", "else", "enum", "extern", "float", "for", "goto",
        "if", "int", "long", "register", "return", "short", "signed", "sizeof",
        "static", "struct", "switch", "typedef", "union", "unsigned", "void",
        "volatile", "while"
    };
    int i, flag = 0;

    for (i = 0; i < 32; ++i) {
        if (strcmp(keywords[i], buffer) == 0) {
            flag = 1;
            break;
        }
    }

    return flag;
}

int isOperator(char ch) {
    char operators[] = "+-*/%=<>&|^!";
    for (int i = 0; operators[i] != '\0'; ++i) {
        if (ch == operators[i])
            return 1;
    }
    return 0;
}

int isDelimiter(char ch) {
    char delimiters[] = "(),;:{}[]";
    for (int i = 0; delimiters[i] != '\0'; ++i) {
        if (ch == delimiters[i])
            return 1;
    }
    return 0;
}
